#!/bin/sh /etc/rc.common

# Copyright (C) 2023-2024 Geminilake (https://geminilake.github.io/)
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

START=99
STOP=15
USE_PROCD=1

# Service name and configuration file
SERVICE_NAME="AutoSync"
CONFIG_FILE="autosync"

# Path to the main sync script
SYNC_SCRIPT="/usr/bin/realtime_sync.sh"

# Log a message using the system logger
log_msg() {
    logger -t "autosync" "$1"
}

# Service start-up routine
start_service() {
    # Check for required commands before starting
    if ! command -v rsync >/dev/null 2>&1; then
        log_msg "ERROR: rsync command not found. Please install 'rsync' package."
        return 1
    fi
    if ! command -v inotifywait >/dev/null 2>&1; then
        log_msg "ERROR: inotifywait command not found. Please install 'inotify-tools' package."
        return 1
    fi

    # Load the configuration file
    config_load "$CONFIG_FILE"

    

    # Get global defaults from the 'global' section
    # (Removed global_delay and global_logfile as they are now per-task)

    # This function will be called by config_foreach for each 'sync' section
    start_instance() {
        local section_name="$1"
        local enabled src dest delay logfile sync_deletes
        
        config_get_bool enabled "$section_name" "enabled" "0"
        config_get src "$section_name" "src"
        config_get dest "$section_name" "dest"
        config_get delay "$section_name" "delay" "5" # Default to 5 seconds if not set
        config_get logfile "$section_name" "logfile" # Get logfile path, will be empty if not set
        config_get_bool sync_deletes "$section_name" "sync_deletes" "0"

        if [ "$enabled" -eq 0 ]; then
            log_msg "Task '$section_name' is disabled, skipping."
            return
        fi

        if [ -z "$src" ] || [ -z "$dest" ]; then
            log_msg "ERROR: Task '$section_name' is missing 'src' or 'dest'. Skipping."
            return
        fi

        if [ ! -d "$src" ]; then
            log_msg "ERROR: Source directory '$src' for task '$section_name' does not exist. Skipping."
            return
        fi

        log_msg "Starting sync task '$section_name': '$src' -> '$dest'"

        procd_open_instance "$section_name"
        procd_set_param command "$SYNC_SCRIPT" "$src" "$dest" "$delay" "$logfile" "$sync_deletes"
        procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}
        procd_set_param stdout 1
        procd_set_param stderr 1
        procd_close_instance
    }

    # Iterate over all sections of type 'sync' and call start_instance for each
    config_foreach start_instance "sync"
}

# Service shutdown routine
stop_service() {
    log_msg "Service stopping..."
}

# Service reload routine
reload_service() {
    stop
    start
}